var err = trap
{{#equals endpointUrlType "prod"}}{{#if hasProdEpConfig}}{{operationId}}{{else}}{{qualifiedServiceName}}{{/if}}_{{endpointUrlType}}.__init("{{#if hasProdEpConfig}}{{operationId}}{{else}}{{qualifiedServiceName}}{{/if}}_{{endpointUrlType}}",{{/equals}}
{{#equals endpointUrlType "sand"}}{{#if hasSandEpConfig}}{{operationId}}{{else}}{{qualifiedServiceName}}{{/if}}_{{endpointUrlType}}.__init("{{#if hasSandEpConfig}}{{operationId}}{{else}}{{qualifiedServiceName}}{{/if}}_{{endpointUrlType}}", {{/equals}}
{
targets: [
    {{#endpoints}}    {url: {{#if isEtcdEnabled}}<string> getUrlOfEtcdKeyForReInit{{cut qualifiedServiceName " "}}("{{name}}_{{endpointUrlType}}_endpoint_{{@index}}","{{name}}_{{endpointUrlType}}_{{@index}}_etcdKey","{{etcdKey}}", "{{endpointUrl}}")}{{else}} <string>gateway:retrieveConfig("{{name}}_{{endpointUrlType}}_endpoint_{{@index}}", "{{endpointUrl}}"){{>secureSocket}} }{{/if}}{{#unless @last}},
    {{/unless}}{{/endpoints}}

],
{{>http2}}{{>caching}}{{>basicAuth}} });